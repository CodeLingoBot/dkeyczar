
High Priority:

    - implement keyczar tool so our library is standalone
        => key generation
        => write out json keys
        => other export options

    - improve internal documentation

    - PKCS#8 private key import/export
      -- asn1 is painful.
      (dsa not supported -- must implement)
      (rsa export not supported -- must implement)

    - signed session encryption

Low Priority:

    - decide on visibility of keyinfo enums
        - some of the ImportFOOForBar would be easier if we exported the KeyPurpose enum

    - write functions to abstract byte-stream format
        - type header struct {
              uint8 version
              uint32 keyid
          }
        getHeader()
        getIv()
        getCipherText()
        getSignature()

    - newFOOJsonFromKey()
        => each type should have its own 'json<->key' function
        => currently logic is in newFOOKeys and readers:ImportFOOKey

    - refactor duplicate code in newFOOkeys
    - refactor marshaljson quoted string creation ?
    - better error messages?  "bad version 0x4 in header" vs. "bad version in header"
    - string -> []byte changes for API?
    - try not to modify slices

    - test cases for
        encodeWeb64String
        decodeWeb64String
        lenPrefixPack
        lenPrefixUnpack

    - cache key id so it's only calculated once at key load time?

    - timed signatures

    - unversioned signatures

    - for pbereader, don't store password, only hmac? (and let it store the password?0

    - code reorg
        split keydata into aeskey, rsakey, ... ?


    - standardize on RSA/Rsa/...
